{
  "openapi": "3.0.0",
  "info": {
    "title": "Registration System API",
    "description": "API Registration System documentation",
    "version": "1.0.0",
    "contact": {
      "name": "API support",
      "url": "http://www.example.com/support",
      "email": "mail@email.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user using name and email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "any_name any_last_name swagger",
                  "email": "any_email_swagger@mail.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "User already exists"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "List all users",
        "description": "The route receives name, and email within the body of the request in order to be able to register a user.",
        "parameters": [
          {
            "name": "user_id",
            "in": "header",
            "description": "ID do usuário",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Unauthorized operation"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "List user.",
        "description": "The route receives, in the route parameters, the id of a user and returns the user information found by the response body.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Make admin a user",
        "description": "The route gets, in the route parameters, the id of a user and turns that user into admin.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
}
